{"version":3,"sources":["component/weather/WeatherCard.js","component/weather/Temp.js","App.js","index.js"],"names":["WeatherCard","tempInfo","useState","weatherState","setWeatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.759164da.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst WeatherCard = ({tempInfo}) => {\r\n\r\n    const [weatherState, setWeatherState] = useState(\"\");\r\n    const {temp, humidity, pressure, weathermood, name, speed, country, sunset} = tempInfo;\r\n\r\n\r\n    // weathermood icon change in temp\r\n\r\n    useEffect(() => {\r\n        if(weathermood){\r\n            switch (weathermood) {\r\n                case \"Clouds\": \r\n                setWeatherState(\"wi-day-cloudy\");                  \r\n                break;\r\n\r\n                case \"Haze\": \r\n                setWeatherState(\"wi-fog\");                  \r\n                break;\r\n\r\n                case \"Clear\": \r\n                setWeatherState(\"wi-day-sunny\");                  \r\n                break;\r\n            \r\n                default:\r\n                    setWeatherState(\"wi-day-sunny\");   \r\n                    break;\r\n            }\r\n        }\r\n    }, [ weathermood ])\r\n  \r\n\r\n    // converting second to hour and menutes\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <article className=\"widget\">\r\n                    <div className=\"weatherIcon\">\r\n                        <i className={`wi ${weatherState}`}></i>\r\n                    </div>\r\n\r\n                    <div className=\"weatherInfo\">\r\n                        <div className=\"temperature\">\r\n                            <span>{temp}&deg;</span>\r\n                        </div>\r\n\r\n                        <div className=\"description\">\r\n                            <div className=\"weatherCondition\">{weathermood}</div>\r\n                            <div className=\"place\">{name} , {country}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n\r\n                {/* our 4column section  */}\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-sunset\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">{timeStr}\r\n                                PM <br /> Sunset\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-humidity\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">{humidity}\r\n                            <br />\r\n                            Humidity\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-rain\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\"> {pressure}\r\n                            <br />\r\n                            Pressure\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-strong-wind\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\"> {speed}\r\n                            <br />\r\n                            Speed\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;\r\n","\r\nimport React, {useState ,useEffect} from \"react\";\r\nimport \"./style.css\";\r\nimport WeatherCard from \"./WeatherCard\";\r\n\r\nconst Temp = () => {\r\n\r\n  const [searchValue, setSearchValue] = useState(\"dhaka\");\r\n  const [tempInfo, setTempInfo] = useState({})\r\n\r\n  const getWeatherInfo = async() =>{\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=69e20ac86db4f7a545b2d9bcb3c740f8`\r\n\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      const {temp, humidity, pressure} = data.main;\r\n      const{main:weathermood} = data.weather[0];\r\n      const {name} = data;\r\n      const {speed} = data.wind;\r\n      const {country, sunset} = data.sys;\r\n      \r\n      const myNewWeatherInfo = {\r\n        temp, humidity, pressure, weathermood, name, speed, country, sunset\r\n      }\r\n\r\n      setTempInfo(myNewWeatherInfo);\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, [])\r\n \r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\" placeholder=\"search...\" autoFocus id=\"search\" className=\"searchTerm\" value={searchValue} onChange={ (e) => setSearchValue(e.target.value)}/>\r\n          <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}> Search </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* our temp card  */}\r\n      <WeatherCard tempInfo ={tempInfo}/>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temp;\r\n","import React from \"react\";\nimport Temp from \"./component/weather/Temp\";\n\nfunction App() {\n  return (\n    <>\n      < Temp />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}